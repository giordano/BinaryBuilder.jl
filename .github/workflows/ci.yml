name: CI

on:
  push:
    branches:
      - master
      - gh-pages # For building documentation
      - /^testing-.*$/ # testing branches
      - /^v[0-9]+\.[0-9]+\.[0-9]+$/ # version tags
      - mg/**
    tags: ["*"]
  pull_request:

env:
  BINARYBUILDER_AUTOMATIC_APPLE: true

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.3"
          - "1.4"
          - "nightly"
        os:
          - ubuntu-latest
          # - macOS-latest
          # - windows-latest
        arch:
          - x64
        include:
          # Add a job that uses the privileged builder with squashfs shards
          - version: "1.3"
            os: ubuntu-latest
            env:
              - BINARYBUILDER_RUNNER: privileged
              - BINARYBUILDER_USE_SQUASHFS: true

          # Add a job that uses the unprivileged builder with unpacked shards
          - version: "1.3.0"
            os: ubuntu-latest
            env:
              - BINARYBUILDER_RUNNER: unprivileged
              - BINARYBUILDER_USE_SQUASHFS: false

          # Add a job that uses the docker builder with unpacked shards
          - version: "1.3.0"
            os: ubuntu-latest
            env:
              - BINARYBUILDER_RUNNER: docker
              - BINARYBUILDER_USE_SQUASHFS: false
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      # - name: Cache artifacts
      #   uses: actions/cache@v1
      #   env:
      #     cache-name: cache-artifacts
      #   with:
      #     path: ~/.julia/artifacts
      #     key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-test-${{ env.cache-name }}-
      #       ${{ runner.os }}-test-
      #       ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - name: Setup git user
        run: |
          git config --global user.name "Binary Builder"
          git config --global user.email "binary.builder@julialang.org"
      - uses: julia-actions/julia-runtest@latest
      - uses: julia-actions/julia-uploadcodecov@latest
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: "1.4"
      - uses: julia-actions/julia-docdeploy@releases/v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
